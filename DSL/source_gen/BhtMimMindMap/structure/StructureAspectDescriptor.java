package BhtMimMindMap.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBHTMainTopic = createDescriptorForBHTMainTopic();
  /*package*/ final ConceptDescriptor myConceptBHTMarker = createDescriptorForBHTMarker();
  /*package*/ final ConceptDescriptor myConceptBHTMindMap = createDescriptorForBHTMindMap();
  /*package*/ final ConceptDescriptor myConceptBHTRootTopic = createDescriptorForBHTRootTopic();
  /*package*/ final ConceptDescriptor myConceptBHTSubTopic = createDescriptorForBHTSubTopic();
  /*package*/ final ConceptDescriptor myConceptBHTTopic = createDescriptorForBHTTopic();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBHTMainTopic, myConceptBHTMarker, myConceptBHTMindMap, myConceptBHTRootTopic, myConceptBHTSubTopic, myConceptBHTTopic);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.BHTMainTopic:
        return myConceptBHTMainTopic;
      case LanguageConceptSwitch.BHTMarker:
        return myConceptBHTMarker;
      case LanguageConceptSwitch.BHTMindMap:
        return myConceptBHTMindMap;
      case LanguageConceptSwitch.BHTRootTopic:
        return myConceptBHTRootTopic;
      case LanguageConceptSwitch.BHTSubTopic:
        return myConceptBHTSubTopic;
      case LanguageConceptSwitch.BHTTopic:
        return myConceptBHTTopic;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBHTMainTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BhtMimMindMap", "BHTMainTopic", 0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a407f877L);
    b.class_(false, false, false);
    // extends: BhtMimMindMap.structure.BHTTopic
    b.super_(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a40696b1L);
    b.origin("r:148d3c45-f0fe-4e0a-b54a-ecafc4f6ec31(BhtMimMindMap.structure)/8730602560471693431");
    b.version(3);
    b.aggregate("subTopic", 0x792954c5a4087452L).target(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a4083e47L).optional(true).ordered(true).multiple(true).origin("8730602560471725138").done();
    b.alias("main topic");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBHTMarker() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BhtMimMindMap", "BHTMarker", 0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a406c44fL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:148d3c45-f0fe-4e0a-b54a-ecafc4f6ec31(BhtMimMindMap.structure)/8730602560471614543");
    b.version(3);
    b.alias("marker for topic");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBHTMindMap() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BhtMimMindMap", "BHTMindMap", 0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a4066e3eL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:148d3c45-f0fe-4e0a-b54a-ecafc4f6ec31(BhtMimMindMap.structure)/8730602560471592510");
    b.version(3);
    b.aggregate("marker", 0x792954c5a407762cL).target(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a406c44fL).optional(true).ordered(true).multiple(true).origin("8730602560471660076").done();
    b.aggregate("centralTopic", 0x792954c5a407b2f2L).target(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a40781c4L).optional(true).ordered(true).multiple(false).origin("8730602560471675634").done();
    b.alias("mindmap ");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBHTRootTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BhtMimMindMap", "BHTRootTopic", 0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a40781c4L);
    b.class_(false, false, false);
    // extends: BhtMimMindMap.structure.BHTTopic
    b.super_(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a40696b1L);
    b.origin("r:148d3c45-f0fe-4e0a-b54a-ecafc4f6ec31(BhtMimMindMap.structure)/8730602560471663044");
    b.version(3);
    b.aggregate("mainTopic", 0x792954c5a408271aL).target(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a407f877L).optional(true).ordered(true).multiple(true).origin("8730602560471705370").done();
    b.alias("central topic");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBHTSubTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BhtMimMindMap", "BHTSubTopic", 0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a4083e47L);
    b.class_(false, false, false);
    // extends: BhtMimMindMap.structure.BHTTopic
    b.super_(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a40696b1L);
    b.origin("r:148d3c45-f0fe-4e0a-b54a-ecafc4f6ec31(BhtMimMindMap.structure)/8730602560471711303");
    b.version(3);
    b.aggregate("subSubTopic", 0x792954c5a4087eceL).target(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a4083e47L).optional(true).ordered(true).multiple(true).origin("8730602560471727822").done();
    b.alias("sub topic");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForBHTTopic() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("BhtMimMindMap", "BHTTopic", 0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a40696b1L);
    b.class_(false, true, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:148d3c45-f0fe-4e0a-b54a-ecafc4f6ec31(BhtMimMindMap.structure)/8730602560471602865");
    b.version(3);
    b.associate("bhtmarker", 0x792954c5a4076c69L).target(0x5b38a289a18d48cfL, 0xa3c27f325ec8d2f5L, 0x792954c5a406c44fL).optional(true).origin("8730602560471657577").done();
    b.alias("topic for mindmap");
    return b.create();
  }
}
